import streamlit as st
import numpy as np
import plotly.express as px
from PIL import Image

def app():
    st.title("üìä Compare Results")
    st.write("Compare the original and compressed images.")

    # D·ªØ li·ªáu gi·∫£ l·∫≠p
    mock_original = (np.random.rand(256, 256) * 255).astype(np.uint8)
    mock_compressed = (mock_original * 0.95).astype(np.uint8)

    # Hi·ªÉn th·ªã ·∫£nh song song
    col1, col2 = st.columns(2)
    with col1:
        st.image(mock_original, caption="Original Image", use_container_width=True)
    with col2:
        st.image(mock_compressed, caption="Compressed Image", use_container_width=True)
    # GHI CH√ö: T√≠ch h·ª£p v·ªõi ph·∫ßn core
    # L·∫•y ·∫£nh g·ªëc t·ª´ st.session_state['image'] v√† ·∫£nh n√©n t·ª´ st.session_state['compressed_image']

    # Slider so s√°nh
    st.subheader("Before/After Slider")
    # GHI CH√ö: T√≠ch h·ª£p slider so s√°nh b·∫±ng c√°ch s·ª≠ d·ª•ng th∆∞ vi·ªán nh∆∞ streamlit-image-comparison
    # Ho·∫∑c t·∫°o custom slider v·ªõi st.slider v√† overlay hai ·∫£nh

    # Th√¥ng s·ªë so s√°nh
    st.subheader("Compression Metrics")
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.metric("Original Size", "500 KB")
    with col2:
        st.metric("Compressed Size", "150 KB")
    with col3:
        st.metric("Compression Ratio", "3.33:1")
    with col4:
        st.metric("PSNR", "35.2 dB")
    # GHI CH√ö: T√≠ch h·ª£p v·ªõi ph·∫ßn core
    # T√≠nh to√°n c√°c ch·ªâ s·ªë (size, ratio, PSNR, SSIM) t·ª´ JPEGProcessor.get_metrics()

    # Bi·ªÉu ƒë·ªì
    st.subheader("Visual Analysis")
    fig = px.bar(x=["Original", "Compressed"], y=[500, 150], title="File Size Comparison")
    st.plotly_chart(fig)

    fig = px.histogram(
        x=mock_original.flatten() - mock_compressed.flatten(),
        nbins=50,
        title="Error Histogram"
    )
    st.plotly_chart(fig)
    # GHI CH√ö: T·∫°o histogram t·ª´ s·ª± kh√°c bi·ªát pixel gi·ªØa ·∫£nh g·ªëc v√† ·∫£nh n√©n
